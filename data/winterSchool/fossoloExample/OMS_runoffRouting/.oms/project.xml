<!--
     Do not edit this file!
     Edit the file ../build.properties and ../build.xml instead.
-->
<project basedir=".." >
    <property file=".oms/project.properties"/>

    <!-- Directory properties -->
    <property name="src.dir"        value="src"/>
    <property name="dist.dir"       value="dist"/>
    <property name="lib.dir"        value="lib"/>
    <property name="build.dir"      value="build"/>
    <property name="output.dir"     value="output"/>
    <property name="data.dir"       value="data"/>
    <property name="classes.dir"    value="${build.dir}/classes"/>
    <property name="obj.dir"        value="${build.dir}/obj"/>
    <property name="gensrc.dir"     value="${build.dir}/gensrc"/>

    <!-- OMS Properties -->
    <property name="oms.version"    value="3.1"/>
    <property name="oms.home"       value="${user.home}/.oms/${oms.version}"/>
    <property name="oms.loglevel"   value="OFF"/>
    <property name="oms.cli"        value="r"/>
      
    <!-- NAP properties -->
    <property name="fortran.files"  value="**/*.f90, **/*.for, **/*.f"/>
    <property name="c.files"        value="**/*.c"/>
    <property name="cpp.files"      value="**/*.cpp, **/*.cpp, **/*.c++, **/*.C"/>
    <property name="nl.files"       value="**/*.nlogo"/>
    
    <!-- Java and JDK properties -->
    <property name="javac.options"          value=""/>
    <property name="javac.source"           value="1.6"/>
    <property name="javac.target"           value="1.6"/>
    <property name="javac.encoding"         value="UTF-8"/>

    <property name="oms.java.home"          value="${java.home}"/>
    <property name="oms.java.options"       value=""/>
    <property name="oms.java.workingdir"    value="${basedir}"/>
    
    <property name="nap.gen.logging"      value="false"/>
    <property name="nap.gen.singleton"    value="false"/>
    <property name="nap.gen.protected"    value="false"/>
    
    
    
    <path id="oms-cp" >
        <fileset dir="${oms.home}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.dir}" erroronmissingdir="false">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${dist.dir}" erroronmissingdir="false">
            <include name="*.jar"/>
        </fileset>
    </path>
  
    <taskdef name="nap" classname="oms3.nap.JNAComponentTask" classpathref="oms-cp" />
    <taskdef name="cc" classname="net.sf.antcontrib.cpptasks.CCTask" classpathref="oms-cp" />
  
    <target name="all" depends="jar"/>
    <target name="compile" depends="compile-fortran, nap, compile-java"/>

    <target name="-init">
        <fail unless="ant.project.name">Missing property 'ant.project.name'</fail>
        <property name="name"  value="${ant.project.name}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${obj.dir}"/>
        <mkdir dir="${gensrc.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${output.dir}"/>
        
        <fileset dir="${src.dir}" id="f.src.files" includes="${fortran.files}"/>
        <pathconvert setonempty="false" pathsep=" " property="has.fortran.files" refid="f.src.files"/>
    </target>

    <target name="clean" description="Clean build and dist">
        <delete dir="${build.dir}" followsymlinks="false" includeemptydirs="true"/>
        <delete dir="${dist.dir}" followsymlinks="false" includeemptydirs="true"/>
    </target>
    
    <target name="clean-output" description="Clean output">
        <delete includeemptydirs="true" followsymlinks="false">
            <fileset dir="${output.dir}" includes="**/*"/>
        </delete>
    </target>

    <target name="compile-fortran" depends="-init" if="has.fortran.files" description="Compile all Fortran">
        <cc name="gfortran" outtype="shared" subsystem="console" outfile="${dist.dir}/${name}" objdir="${obj.dir}">
            <fileset dir="${src.dir}" includes="${fortran.files}"/>
            <compilerarg value="-g"/>
            <linker name="gfortran"/>
        </cc>
    </target>
    
    <target name="nap" depends="-init"  unless="nap.skip" description="Perform native annotation processing (NAP)">
        <nap destdir="${gensrc.dir}" dllName="${name}"
              genlogging="${nap.gen.logging}"
              gensingleton="${nap.gen.singleton}"
              genprotected="${nap.gen.protected}">
            <fileset dir="${src.dir}" includes="${fortran.files}"/>
            <fileset dir="${src.dir}" includes="${nl.files}"/>
        </nap>
    </target>
    
    <target name="compile-java" depends="-init" description="Compile all Java code">
        <javac destdir="${classes.dir}" encoding="${javac.encoding}" debug="true" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" classpathref="oms-cp" >
            <compilerarg line="${javac.options}"/>
            <src path="${src.dir}"/>
            <src path="${gensrc.dir}"/>
        </javac>
    </target>

    <target name="jar" depends="-init, compile" description="Build the model jar.">
        <tstamp>
            <format property="now" pattern="yyyy-MM-dd HH:mm:ss z" locale="en,US"/>
        </tstamp>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java **/*.html"/>
        </copy>
        <jar jarfile="${dist.dir}/${name}.jar">
            <fileset dir="${classes.dir}"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-Date" value="${now}"/>
                <attribute name="Implementation-Vendor" value="USDA/CSU"/>
                <attribute name="Implementation-Title" value="${name}"/>
                <attribute name="Implementation-Version" value="1.0"/>
                <attribute name="OMS-Version" value="${oms.version}"/>
            </manifest>
        </jar>
    </target>
    
    <target name="zip" depends="-init" description="Zip the whole project">
        <basename property="dir.name" file="${basedir}"/>
        <delete file="${dir.name}.zip"/>
        <zip basedir=".." destfile="${dir.name}.zip" includes="${dir.name}/**" 
            excludes="${dir.name}/${build.dir}/, ${dir.name}/${output.dir}/, **/.svn/">
        </zip>
    </target>
    
    <target name="run" description="Run the simulation.">
        <fail unless="file">Missing property 'file'</fail>
        <property name="run.class" value="${file}"/>
        <property name="oms.cli" value="r"/>
        <antcall target="run-selected-file" inheritall="true"/> 
    </target>
    
    <!-- Hook into NB single file execution for freeform projects -->
    <target name="run-selected-file" depends="jar" description="Run simulation from netbeans">
        <fail unless="run.class">Missing property 'run.class'</fail>
        <java dir="${oms.java.workingdir}" classpathref="oms-cp" classname="oms3.CLI" fork="true" jvm="${oms.java.home}/bin/java" >
            <sysproperty key="oms3.work" value="${basedir}"/>
            <jvmarg line="${oms.java.options}"/>
            <arg line="-l ${oms.loglevel} -${oms.cli} ${run.class}"/>
        </java>
    </target>
    
    <target name="run-selected-file-in-src" depends="jar">
        <fail unless="run.class">Must set property 'run.class'</fail>
        <java classname="${run.class}" classpathref="oms-cp" failonerror="true" fork="true">
            <sysproperty key="oms3.work" value="${basedir}"/>
            <jvmarg line="${oms.java.options}"/>
        </java>
    </target>
    
    <target name="debug-selected-file" description="Debug the simulation from netbeans">
        <fail unless="run.class">Missing property 'run.class'</fail>
        <nbjpdastart name="${run.class}" addressproperty="jpda.address" transport="dt_socket">
            <classpath refid="oms-cp"/>
          <!-- Optional - If source roots are properly declared in project, should
          work without setting source path.
          <sourcepath refid="debug.sourcepath"/> -->
        </nbjpdastart>
        <java dir="${oms.java.workingdir}" classpathref="oms-cp" classname="oms3.CLI" fork="true" jvm="${oms.java.home}/bin/java">
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=none"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <jvmarg line="${oms.java.options}"/>
            <sysproperty key="oms3.work" value="${basedir}"/>
            <arg line="-l ${oms.loglevel} -${oms.cli} ${run.class}"/>
        </java>
    </target>
    
    <target name="compile-selected-files-in-src" depends="-init" description="Compile a single file">
        <fail unless="files">Must set property 'files'</fail>
        <javac destdir="${classes.dir}"  encoding="${javac.encoding}" includes="${files}" debug="true" includeantruntime="false"
               target="${javac.target}" source="${javac.source}" classpathref="oms-cp" >
            <compilerarg line="${javac.options}"/>
            <src path="${src.dir}"/>
            <src path="${gensrc.dir}"/>
        </javac>
    </target>
  
</project>
